* Project phases
** Authoring phase
*** User should be able to define CLI args

*simba_define_cli_args*


The cli argument name "$1" is persisted in an array.

** Configuration phase
** Build phase
** Installation phase
** Runtime
* Common variables
# Author
PKG_AUTHOR_NAME="pavlos noulis"

PKG_AUTHOR_ID="pnoulis"

PKG_AUTHOR_EMAIL="pavlos.noulis@gmail.com"

PKG_AUTHOR_HOME_URL="https://github.com/pnoulis"

# Package
PKG_NAME="template"

PKG_ID="template"

PKG_PRETTY_NAME="template"

PKG_VERSION="0.0.1"

PKG_VERSION_ID="0.0.1"

PKG_VERSION_CODENAME="template"

PKG_TARNAME="template-v0.0.1"

PKG_REPOSITORY_TYPE="git"

PKG_REPOSITORY_DOMAIN="github.com"

PKG_REPONAME="template"

PKG_REPOSITORY_PATH="pnoulis/template"

PKG_REPOSITORY_URL="https://github.com/pnoulis/template"

PKG_HOME_URL="https://github.com/pnoulis/template"

PKG_DOCUMENTATION_URL="https://github.com/pnoulis/template#readme"

PKG_BUG_REPORT_URL="https://github.com/pnoulis/template/issues"

PKG_SUPPORT_URL="https://github.com/pnoulis/template"



* TODO Use arrays not strings for handling build time macro definitions

Use arrays not strings.

M4 invocation works with dynamic flags works if these flags are held
at an array. It does not work if they are within a string.

this works:
M4FLAGS=(-Done='a' -Dtwo='b' ...)
M4FLAGS+=(-Dthree='c')
m4 "${M4FLAGS[@]}"

this does not work:
M4FLAGS="-Done='a' -Dtwo='b' ..."
M4FLAGS+="-Dthree='c'"
m4 "${M4FLAGS}"

Implementation at src/simba.sh
define_btime_envar

* TODO Move resolving os dependencies after getting user input
* TODO Design a better interface for declaring user options
